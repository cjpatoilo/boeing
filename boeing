#!/bin/bash
# set -e # Exit with nonzero exit code if anything fails

# statement
REMOTE="$(git config remote.origin.url)"
DIRECTORY="dist"
BRANCH="gh-pages"
HELP="Usage:

  boeing <directory> [<options>]

Options:

  -h, --help              Display help information about Boeing
  -v, --version           Output Bower version

Examples:

  boeing
  boeing dist"

# options
for ARGS in "$@"
do
	if [ "${ARGS}" = "-h" ] || [ "${ARGS}" = "--help" ]
	then
		echo "${HELP}"
		exit 0
	fi
	if [ "${ARGS}" = "-v" ] || [ "${ARGS}" = "--version" ]
	then
		seq "${#@}" | grep -m1 version package.json | awk -F: "{ print ${INDEX} }" | sed -E -e 's/[version:",[:blank:]]+//g'
		exit 0
	fi
done

# verification
if [ "$#" -gt 1 ]
then
	echo -e "\033[0;31m${HELP}"
	exit 2
fi

# arguments
if [ -n "${1}" ]
then
	DIRECTORY=$1
	if [[ "${DIRECTORY}" =~ .*['!'@~#\$%:^\&*{}()_+].* ]]
	then
		echo -e "\033[0;31mboeing: bad name \"${DIRECTORY}\""
		exit 2
	fi
fi
if [ -n "${2}" ]
then
	BRANCH=$2
fi

# prepare
rm -rf node_modules/boeing/"${BRANCH}"
if [ -z "$(git ls-remote --heads ${REMOTE} ${BRANCH})" ]
then
	git clone "${REMOTE}" node_modules/boeing/"${BRANCH}"
	cd node_modules/boeing/"${BRANCH}" || exit 1
	git checkout --orphan "${BRANCH}"
	echo "boeing: creating a new branch \"${BRANCH}\""
else
	git clone -b "${BRANCH}" --single-branch "${REMOTE}" node_modules/boeing/"${BRANCH}"
	cd node_modules/boeing/"${BRANCH}" || exit 1
	echo "boeing: connecting with branch \"${BRANCH}\""
fi

# update
rm -rf ./*
cp -rf ../../../"${DIRECTORY}"/* ./

# diff
if [ -z "$(git diff --exit-code)" ]
then
	cd ..
	rm -rf "${BRANCH}"
	echo "boeing: no changes on this push"
	exit 0
fi

# push
git add .
git commit -m "boeing: deploy to GitHub Pages: $(git rev-parse --verify HEAD)"
git push origin "${BRANCH}"

# clean
cd ..
rm -rf "${BRANCH}"
echo "boeing: deployed successfully on this push"
exit 0
